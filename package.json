{
    "name": "idleon-injector-rebuild",
    "version": "1.1.2-Legacy",
    "main": "dist/main.js",
    "scripts": {
        "clean": "rimraf dist",
        "install:deps": "npm install",
        "postinstall": "echo Installation complete. Run 'npm run build:all' to build for all platforms.",
        "build:tsc": "npm run clean && tsc",
        "copy:ui": "copyfiles -u 3 src/web/ui/**/* dist/web/ui/ && copyfiles package.json dist/",
        "list-dist": "node -e \"const fs=require('fs');const path=require('path');function listDir(dir,prefix=''){const items=fs.readdirSync(dir);items.forEach(item=>{const fullPath=path.join(dir,item);const stat=fs.statSync(fullPath);if(stat.isDirectory()){console.log(prefix+'📁 '+item+'/');listDir(fullPath,prefix+'  ');}else{console.log(prefix+'📄 '+item+' ('+stat.size+' bytes)');}});}console.log('📂 dist/');listDir('dist');\"",
        "prebuild": "mkdir -p build 2>/dev/null || mkdir build 2>nul || echo Build directory exists",
        "build": "npm run prebuild && npm run build:tsc && npm run copy:ui && npm run list-dist",
        "build:windows": "npm run build && npm run pkg:windows",
        "build:linux": "npm run build && npm run pkg:linux",
        "build:macos": "npm run build && npm run pkg:macos",
        "build:macos-arm64": "npm run build && npm run pkg:macos-arm64",
        "pkg:windows": "pkg . --targets node18-win-x64 --output build/IdleCI-windows-x64",
        "pkg:linux": "pkg . --targets node18-linux-x64 --output build/IdleCI-linux-x64",
        "pkg:macos": "pkg . --targets node18-macos-x64 --output build/IdleCI-macos-x64",
        "pkg:macos-arm64": "pkg . --targets node18-macos-arm64 --output build/IdleCI-macos-arm64 || echo 'ARM64 build completed (post-build error ignored)'",
        "build:all": "npm run build && npm run pkg:windows && npm run pkg:linux && npm run pkg:macos && npm run pkg:macos-arm64 || echo 'All builds completed'",
        "build:all:no-arm64": "npm run build && npm run pkg:windows && npm run pkg:linux && npm run pkg:macos",
        "build:all:parallel": "npm run build && npm-run-all --parallel pkg:windows pkg:linux pkg:macos pkg:macos-arm64",
        "build:all:parallel:fallback": "npm run build && npm run pkg:windows && npm run pkg:linux && npm run pkg:macos && npm run pkg:macos-arm64",
        "start": "node dist/main.js",
        "dev": "ts-node src/main.ts -d",
        "bun:dev": "bun run src/main.ts -d",
        "bun:start": "bun run src/main.ts"
    },
    "dependencies": {
        "@types/commander": "^2.12.0",
        "@types/winston": "^2.4.4",
        "@types/yargs": "^17.0.33",
        "atob": "^2.1.2",
        "btoa": "^1.2.1",
        "chalk": "^4.1.2",
        "child_process": "^1.0.2",
        "chrome-remote-interface": "^0.33.0",
        "commander": "^14.0.0",
        "data-store": "^3.1.0",
        "enquirer": "^2.3.6",
        "express": "^5.1.0",
        "gradient-string": "^2.0.2",
        "lodash": "^4.17.21",
        "prompt": "^1.3.0",
        "readline-sync": "^1.4.10",
        "winston": "^3.17.0"
    },
    "devDependencies": {
        "@types/atob": "^2.1.4",
        "@types/btoa": "^1.2.5",
        "@types/chrome-remote-interface": "^0.31.14",
        "@types/express": "^4.17.21",
        "@types/gradient-string": "^1.1.6",
        "@types/lodash": "^4.17.20",
        "@types/node": "^20.19.8",
        "@types/readline-sync": "^1.4.8",
        "copyfiles": "^2.4.1",
        "npm-run-all": "^4.1.5",
        "rimraf": "^5.0.10",
        "ts-node": "^10.9.1",
        "typescript": "^5.2.2"
    },
    "bin": "dist/main.js",
    "pkg": {
        "assets": [
            "dist/web/ui/**/*",
            "dist/config/**/*",
            "cheats.js"
        ],
        "scripts": [
            "node_modules/chalk/**/*.js",
            "node_modules/gradient-string/**/*.js"
        ],
        "options": [
            "--no-bytecode"
        ],
        "targets": [
            "node18-win-x64",
            "node18-linux-x64",
            "node18-macos-x64",
            "node18-macos-arm64",
            "node20-win-x64",
            "node20-linux-x64",
            "node20-macos-x64",
            "node20-macos-arm64",
            "node22-win-x64",
            "node22-linux-x64",
            "node22-macos-x64",
            "node22-macos-arm64"
        ]
    }
}
